#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Perpustakaan
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="perpustakaan")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBuku(Buku instance);
    partial void UpdateBuku(Buku instance);
    partial void DeleteBuku(Buku instance);
    partial void InsertPelanggan(Pelanggan instance);
    partial void UpdatePelanggan(Pelanggan instance);
    partial void DeletePelanggan(Pelanggan instance);
    partial void InsertSewa(Sewa instance);
    partial void UpdateSewa(Sewa instance);
    partial void DeleteSewa(Sewa instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Perpustakaan.Properties.Settings.Default.perpustakaanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Buku> Bukus
		{
			get
			{
				return this.GetTable<Buku>();
			}
		}
		
		public System.Data.Linq.Table<Pelanggan> Pelanggans
		{
			get
			{
				return this.GetTable<Pelanggan>();
			}
		}
		
		public System.Data.Linq.Table<Sewa> Sewas
		{
			get
			{
				return this.GetTable<Sewa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _email;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buku")]
	public partial class Buku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _title;
		
		private string _category;
		
		private string _author;
		
		private EntitySet<Sewa> _Sewas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    #endregion
		
		public Buku()
		{
			this._Sewas = new EntitySet<Sewa>(new Action<Sewa>(this.attach_Sewas), new Action<Sewa>(this.detach_Sewas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buku_Sewa", Storage="_Sewas", ThisKey="Id", OtherKey="id_buku")]
		public EntitySet<Sewa> Sewas
		{
			get
			{
				return this._Sewas;
			}
			set
			{
				this._Sewas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sewas(Sewa entity)
		{
			this.SendPropertyChanging();
			entity.Buku = this;
		}
		
		private void detach_Sewas(Sewa entity)
		{
			this.SendPropertyChanging();
			entity.Buku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pelanggan")]
	public partial class Pelanggan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _alamat;
		
		private string _status;
		
		private EntitySet<Sewa> _Sewas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnalamatChanging(string value);
    partial void OnalamatChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Pelanggan()
		{
			this._Sewas = new EntitySet<Sewa>(new Action<Sewa>(this.attach_Sewas), new Action<Sewa>(this.detach_Sewas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alamat", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string alamat
		{
			get
			{
				return this._alamat;
			}
			set
			{
				if ((this._alamat != value))
				{
					this.OnalamatChanging(value);
					this.SendPropertyChanging();
					this._alamat = value;
					this.SendPropertyChanged("alamat");
					this.OnalamatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_Sewa", Storage="_Sewas", ThisKey="Id", OtherKey="id_pelanggan")]
		public EntitySet<Sewa> Sewas
		{
			get
			{
				return this._Sewas;
			}
			set
			{
				this._Sewas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sewas(Sewa entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = this;
		}
		
		private void detach_Sewas(Sewa entity)
		{
			this.SendPropertyChanging();
			entity.Pelanggan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sewa")]
	public partial class Sewa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _id_pelanggan;
		
		private int _id_buku;
		
		private int _total_buku;
		
		private int _lama_pinjam;
		
		private double _denda;
		
		private EntityRef<Buku> _Buku;
		
		private EntityRef<Pelanggan> _Pelanggan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onid_pelangganChanging(int value);
    partial void Onid_pelangganChanged();
    partial void Onid_bukuChanging(int value);
    partial void Onid_bukuChanged();
    partial void Ontotal_bukuChanging(int value);
    partial void Ontotal_bukuChanged();
    partial void Onlama_pinjamChanging(int value);
    partial void Onlama_pinjamChanged();
    partial void OndendaChanging(double value);
    partial void OndendaChanged();
    #endregion
		
		public Sewa()
		{
			this._Buku = default(EntityRef<Buku>);
			this._Pelanggan = default(EntityRef<Pelanggan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pelanggan", DbType="Int NOT NULL")]
		public int id_pelanggan
		{
			get
			{
				return this._id_pelanggan;
			}
			set
			{
				if ((this._id_pelanggan != value))
				{
					if (this._Pelanggan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pelangganChanging(value);
					this.SendPropertyChanging();
					this._id_pelanggan = value;
					this.SendPropertyChanged("id_pelanggan");
					this.Onid_pelangganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_buku", DbType="Int NOT NULL")]
		public int id_buku
		{
			get
			{
				return this._id_buku;
			}
			set
			{
				if ((this._id_buku != value))
				{
					if (this._Buku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bukuChanging(value);
					this.SendPropertyChanging();
					this._id_buku = value;
					this.SendPropertyChanged("id_buku");
					this.Onid_bukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_buku", DbType="Int NOT NULL")]
		public int total_buku
		{
			get
			{
				return this._total_buku;
			}
			set
			{
				if ((this._total_buku != value))
				{
					this.Ontotal_bukuChanging(value);
					this.SendPropertyChanging();
					this._total_buku = value;
					this.SendPropertyChanged("total_buku");
					this.Ontotal_bukuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lama_pinjam", DbType="Int NOT NULL")]
		public int lama_pinjam
		{
			get
			{
				return this._lama_pinjam;
			}
			set
			{
				if ((this._lama_pinjam != value))
				{
					this.Onlama_pinjamChanging(value);
					this.SendPropertyChanging();
					this._lama_pinjam = value;
					this.SendPropertyChanged("lama_pinjam");
					this.Onlama_pinjamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_denda", DbType="Float NOT NULL")]
		public double denda
		{
			get
			{
				return this._denda;
			}
			set
			{
				if ((this._denda != value))
				{
					this.OndendaChanging(value);
					this.SendPropertyChanging();
					this._denda = value;
					this.SendPropertyChanged("denda");
					this.OndendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buku_Sewa", Storage="_Buku", ThisKey="id_buku", OtherKey="Id", IsForeignKey=true)]
		public Buku Buku
		{
			get
			{
				return this._Buku.Entity;
			}
			set
			{
				Buku previousValue = this._Buku.Entity;
				if (((previousValue != value) 
							|| (this._Buku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buku.Entity = null;
						previousValue.Sewas.Remove(this);
					}
					this._Buku.Entity = value;
					if ((value != null))
					{
						value.Sewas.Add(this);
						this._id_buku = value.Id;
					}
					else
					{
						this._id_buku = default(int);
					}
					this.SendPropertyChanged("Buku");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelanggan_Sewa", Storage="_Pelanggan", ThisKey="id_pelanggan", OtherKey="Id", IsForeignKey=true)]
		public Pelanggan Pelanggan
		{
			get
			{
				return this._Pelanggan.Entity;
			}
			set
			{
				Pelanggan previousValue = this._Pelanggan.Entity;
				if (((previousValue != value) 
							|| (this._Pelanggan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pelanggan.Entity = null;
						previousValue.Sewas.Remove(this);
					}
					this._Pelanggan.Entity = value;
					if ((value != null))
					{
						value.Sewas.Add(this);
						this._id_pelanggan = value.Id;
					}
					else
					{
						this._id_pelanggan = default(int);
					}
					this.SendPropertyChanged("Pelanggan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
